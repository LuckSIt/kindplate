version: "3.9"

services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: kindplate
      POSTGRES_USER: kind
      POSTGRES_PASSWORD: plate
    volumes:
      - db:/var/lib/postgresql/data
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      NODE_ENV: production
      PORT: 5000
      DATABASE_URL: ${DATABASE_URL}
      SECRET_KEY: ${SECRET_KEY}
      FRONTEND_ORIGIN: ${FRONTEND_ORIGIN}
    depends_on:
      - postgres
    expose:
      - "5000"
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      NODE_ENV: production
      VITE_BACKEND_BASE_URL: ${VITE_BACKEND_BASE_URL}
      VITE_VAPID_PUBLIC_KEY: ${VITE_VAPID_PUBLIC_KEY}
    depends_on:
      - backend
    restart: unless-stopped

  caddy:
    image: caddy:2-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - caddy_data:/data
      - caddy_config:/config
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
    depends_on:
      - frontend
      - backend
    restart: unless-stopped

volumes:
  db:
  caddy_data:
  caddy_config:


