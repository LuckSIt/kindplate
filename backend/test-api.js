require('dotenv').config();
const { Pool } = require('pg');

const pool = new Pool({
    user: process.env.DB_USER || 'postgres',
    host: process.env.DB_HOST || 'localhost',
    database: process.env.DB_NAME || 'kindplate',
    password: process.env.DB_PASSWORD || '12345678',
    port: process.env.DB_PORT || 5432,
});

async function testAPI() {
    try {
        console.log('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º API...');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã users
        const tableInfo = await pool.query(`
            SELECT column_name, data_type 
            FROM information_schema.columns 
            WHERE table_name = 'users' 
            ORDER BY ordinal_position
        `);
        
        console.log('üìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã users:');
        tableInfo.rows.forEach(row => {
            console.log(`  - ${row.column_name}: ${row.data_type}`);
        });
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã offers
        const offersInfo = await pool.query(`
            SELECT column_name, data_type 
            FROM information_schema.columns 
            WHERE table_name = 'offers' 
            ORDER BY ordinal_position
        `);
        
        console.log('\nüìã –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã offers:');
        offersInfo.rows.forEach(row => {
            console.log(`  - ${row.column_name}: ${row.data_type}`);
        });
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ
        const usersResult = await pool.query('SELECT id, name, is_business FROM users WHERE is_business = true');
        console.log('\nüë• –ë–∏–∑–Ω–µ—Å-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:');
        usersResult.rows.forEach(user => {
            console.log(`  - ID: ${user.id}, Name: ${user.name}`);
        });
        
        const offersResult = await pool.query('SELECT id, title, business_id FROM offers LIMIT 3');
        console.log('\nüéÅ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è:');
        offersResult.rows.forEach(offer => {
            console.log(`  - ID: ${offer.id}, Title: ${offer.title}, Business ID: ${offer.business_id}`);
        });
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
    } finally {
        await pool.end();
    }
}

testAPI();



